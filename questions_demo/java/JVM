
JVM

1、详细jvm内存模型

 JVM内存结构主要有三大块：堆内存、方法区和栈。堆内存是JVM中最大的一块由年轻代和老年代组成，而年轻代内存又被分成三部分，Eden空间、From Survivor空间、To Survivor空间,默认情况下年轻代按照8:1:1的比例来分配；
Java堆是垃圾收集器管理的主要区域，因此很多时候也被称做“GC堆”。如果从内存回收的角度看，由于现在收集器基本都是采用的分代收集算法，所以Java堆中还可以细分为：新生代和老年代；再细致一点的有Eden空间、From Survivor空间、To Survivor空间等。

2、讲讲什么情况下回出现内存溢出，内存泄漏？
3、说说Java线程栈
4、JVM 年轻代到年老代的晋升过程的判断条件是什么呢？
5、JVM 出现 fullGC 很频繁，怎么去线上排查问题？
6、类加载为什么要使用双亲委派模式，有没有什么场景是打破了这个模式？
7、类的实例化顺序
8、JVM垃圾回收机制，何时触发MinorGC等操作
9、JVM 中一次完整的 GC 流程（从 ygc 到 fgc）是怎样的
10、各种回收器，各自优缺点，重点CMS、G1
11、各种回收算法
12、OOM错误，stackoverflow错误，permgen space错误
jvm 总体梳理
jvm体系总体分四大块：
*类的加载机制
*jvm内存结构
*GC算法 垃圾回收
*GC分析 命令调优


简单的问题都不好意思问，怕面试者鄙视面试公司问的问题。现在有一股妖风，不管啥公司都慢慢像阿里这样的公司靠近，面试不问点jvm、并发、分布式都不好意（虽然公司可能没有用到，虽然可能仅仅CURD），老是觉得问问这些显得逼格高点，不管处于什么原因很多公司的确都在学习他们，都在问这些问题，那么我们就朝着这些大的方向努力也是没错的，如果朝着这些方向努力就是他们需要的人才，那么也就对了。

类似其他，比如高并发 锁、分布式、缓存等都可以考虑考虑这样思考，你会有不一样的收获的。


