如何学习Kubernetes?

不管你是否意识到，在过去的几年时间里，以Docker、Kubernetes为代表的容器技术已经悄然发展成为一项通用技术。放眼国外，Google、Microsoft、IBM等互联网巨头们，仍在容器开源基础设施的技术市场上厮杀。回看国内，包括BAT、滴滴、京东、头条在内的大厂也都争相把容器和Kubernetes项目作为其技术重心，试图“放长线钓大鱼”。

正如媒体所言，软件正在吃掉世界，而容器正在吃掉整个软件世界。虽说有些夸张，但也充分证明了容器在当今软件研发领域的地位。顺势而为，是否掌握容器技术也成为很多企业在招聘时的一个重要选项。

容器技术本身是一项偏向运维工程师的基础技术，namespace资源隔离、cgroups资源限制等等概念对于开发人员来说，都有一道难以逾越的理解鸿沟。这些年，我一直都在和容器打交道，也一直和容器工程师探讨落地过程中的问题。从这些交流中，我发现总有很多相似的问题被反复提及，比如：

为什么容器里只能跑“一个进程”？
为什么我原先一直在用的某个JVM参数，在容器里就不好使了？
为什么Kubernetes就不能固定IP地址？容器网络连不通又该如何去Debug？
Kubernetes中StatefulSet和Operator到底什么区别？PV和PVC又该怎么用？
这些问题乍一看与我们平常的认知非常矛盾，但它们的答案和原理却并不复杂。而这些对于容器初学者来说，又很难用一两句话就解释清楚。

容器技术涉及到操作系统、网络、存储、调度、分布式原理等等各方面的综合知识，也就导致了很多初学者面对容器技术，要么知识储备不足，要么杂乱无章、无从下手。

其实，看似纷乱繁杂容器技术体系，却存在着很多可以“牵一发而动全身”的主线。比如，Linux的进程模型对于容器本身的重要意义；或者，“控制器”模式对整个Kubernetes项目提纲挈领的作用。

这些基础知识并不会在Docker或者Kubernetes的官方文档中详细赘述。但它们也才是真正掌握容器技术体系的精髓所在，是每一位技术从业者都需要悉心修炼的“内功”。

学习路径
我们究竟应该怎样学习Kubernetes呢？很多同学一听说Kubernetes这个词语后就想直接使用，然后就被Kubernetes复杂的环境搭建拦截在了门外，从此感觉到灰心丧气，这里我总结了一些学习Kubernetes的方式方法，特别对于初学者是非常有用的：

1.学习Docker技术，至少Docker的基本命令要非常熟练
2.katacoda为我们提供了一个学习Kubernetes的环境，这一步非常重要，我们需要先有一个可以使用的环境，先去使用下Kubernetes，感受下，了解Kubernetes里面的一些基本概念
3.Rancher，了解了Kubernetes的一些基本概念后，我们可以使用Rancher来非常快速的搭建一套Kubernetes的测试环境
4.如果你能解决墙的问题，可以使用Docker for MAC/Windows自带的Kubernetes环境
5.到这一步的目的都是熟悉kubectl工具，了解Kubernetes各个资源对象的概念，这个时候我们就可以使用Kubeadm来搭建一套真正的测试环境了，这个环境其实和生产环境差不太多了，但是不建议生产环境使用kubeadm
6.这个时候你一定对Kubernetes的各种操作和概念已经非常熟悉了，现在你可以使用二进制的方式来搭建一套生产可用的集群环境了，手动搭建完成后你就会对Kubernetes各个组件之间的关系非常了解了，对于以后的排查集群故障非常有帮助，建议每个学习Kubernetes的同学都手动搭建一遍集群
7.接下来就看我们自己的需求了，比如Kubernetes的日常运维、日志收集、监控报警、CI/CD、微服务、ServiceMesh、二次开发之类的都可以很好的展开了。
8.如果还想继续深入可以去研究Kubernetes的源码了。


学习方法
如果你通过上面的步骤一步一步走下来，我相信你肯定能够很好的掌握Kubernetes的，但是说老实话，如果没有一些靠谱的资料和教程，一个人一步一步走下来还是非常吃力的，必然会踩很多坑，为此，我们社区为大家推荐两个良心课程，可以帮你能够快速学习Kubernetes。

实战课程
《从Docker到Kubernetes进阶》视频课程是优点知识推出的一套从Docker入门一步步迁移到Kubernetes的进阶视频课程。学完本课程以后，你将会对Docker 和Kubernetes有一个更加深入的认识。

我们会讲到Docker的一些常用方法，当然我们的重点会在Kubernetes上面
会用kubeadm来搭建一套Kubernetes的集群
理解Kubernetes集群的运行原理
常用的一些控制器使用方法
还有Kubernetes的一些调度策略
Kubernetes的运维
包管理工具Helm的使用
最后我们会实现基于Kubernetes的CI/CD
