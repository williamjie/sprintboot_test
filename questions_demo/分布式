session 分布式：
1、session黏性，就是说，用户在访问了某台服务器后，之后的操作就让其只走该服务器就好。那么久可以让用户只访问该台机器了。 
优点：操作简单，不用对session做任何操作 
缺点：当一台机器挂掉后，流量切向其他的机器。会丢失部分用户的session 
适用场景：发生故障对客户产生的影响较小；服务器发生故障是低概率事件。
2、使用广播的方式 
当一台服务器中的session中（增删改）了之后，将这个session中的所有数据，通过广播一样的方式，同步到其他的服务器中去。 
优点：容错性增高 
缺点：机器不能太多，session数量不能太大，否则会造成网络阻塞，是服务器变慢。
3、使用中间件共享session 
使用redis或者Memcached去当做有个中间件，session中的数据存放在其中。这里需要的是redis或者Memcached必须是集群。 
两种做法： 
（1）黏性：说白了就是，和第一种方式一样，一个用户的请求只走一个服务器并且在拿session数据的时候，都只在该台服务器上，但是用户的session需要保存在redis上，作为备份（容灾用）。当一台服务器挂掉了，那么就可以将该用户的session复制到其他的机器上并且把流量转发。 
（1）非黏性：这种情况下，就是将用户的session存放在redis上，用户在访问的时候，读取修改都在redis上 
目前这种做法是大家使用最多的方法
4、session数据存放数据库中 
这种方法的优缺点大家都知道的。 
优点：数据可以持久化，服务器挂掉了也没关系。 
缺点：慢慢慢！！！而且用户过多的时候，性能低下。





分布式相关 
1、Dubbo的底层实现原理和机制 
2、描述一个服务从发布到被消费的详细过程 
3、分布式系统怎么做服务治理 
4、接口的幂等性的概念 
5、消息中间件如何解决消息丢失问题 
6、Dubbo的服务请求失败怎么处理 
7、重连机制会不会造成错误 
8、对分布式事务的理解 
9、如何实现负载均衡，有哪些算法可以实现？ 
10、Zookeeper的用途，选举的原理是什么？ 
11、数据的垂直拆分水平拆分。 
12、zookeeper原理和适用场景 
13、zookeeper watch机制 
14、redis/zk节点宕机如何处理 
15、分布式集群下如何做到唯一序列号 
16、如何做一个分布式锁 
17、用过哪些MQ，怎么用的，和其他mq比较有什么优缺点，MQ的连接是线程安全的吗 
18、MQ系统的数据如何保证不丢失 
19、列举出你能想到的数据库分库分表策略；分库分表后，如何解决全表查询的问题 
20、zookeeper的选举策略 
21、全局ID
22、谈谈业务中使用分布式的场景
23、Session 分布式方案
24、分布式锁的场景
25、分布是锁的实现方案
26、分布式事务
27、集群与负载均衡的算法与实现
28、说说分库与分表设计
29、分库与分表带来的分布式困境与应对之策
