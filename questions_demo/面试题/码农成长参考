个程序员都应该知道的成长法则

java一日一条  1周前
搞JAVA也有些日子了，因为我比较贪玩，上进心不那么强，跳过两次槽，每次都是逼不得已才跳的，爱安逸

但是这个社会，你如果当它有良心，那纯粹给自己找罪受

爱编码，你有编不完的代码，每次一个新的产品要上线，只需要复制一遍从前的代码过来稍微改改就能提测上线了，但是你才不愿意，同一个需求你可以用百八十种方式去实现

烦躁了list，map低层次的原始编码，就改改设计模式，发现23种设计模式纯粹就是十八般武器，要打架还得靠内功：单一职责，开闭，里氏替换，依赖倒置，接口隔离，迪米特

好了。。。搞懂设计模式，那来谈谈volatile为啥就不支持原子性吧。。。synchronized咋就输给了cas了，就好比这次世界杯阿根廷让我输了牛皮外套，德国队却对我的内裤感了兴趣。。最终吃土一个月

懂了上边哪些忽然感觉自己成了牛逼哄哄的克罗地亚队，以为终于要迎来了世纪光辉了。。那说说
jvm基本结构，常用垃圾回收算法，jvm简单调优参数。

数据库也是你成长道路上巨大顽石，mysql事务隔离机制的实现，怎么优化sql ，

要知道springmvc流程 spring的原理 事务传播机制，

mybatis流程原理，

乐观锁悲观锁什么情况用，你要学会考虑系统瓶颈，系统容灾，单点故障，

你要懂得一致性是怎么回事，cap理论 paxos算法 以及zookeeper干嘛用的，能解决什么问题？

你要懂得soa架构，dubbo , 微服务 spring boot spring cloud 这些高级框架

尝试用一用，谷歌，开源社区 将要取代百度成为你解决问题的主要动力和前进的方向，

你会有种一览众山小的感觉，你会觉得弄个百万并发的系统其实并不难，

难的是后续问题，日志处理 运维问题， 关于运维我给不了太多建议，可以了解下 zabbix 之类的

可以去学习下 docker 微服务加docker将是未来的趋势，此时就是k8s。


flume 日志处理 hadoop hive presto hdfs storm spark 大数据 流式计算 ，这些够你喝一壶的了，学到这个份上，也不需要别人指点你什么了，你能到达这个阶段本身已经证明了自己的学习和技术能力。到达这个阶段，你八成已经成为一个跨语言程序员了，因为处理数据，并不是java擅长的，你要非用java………那我只能说 人生苦短，何必折磨自己

其实看来，程序员的成长道路非常漫长，你退缩了那你就平庸了，或许过两年你只能陪着老婆孩纸热炕头了。别着急啊。。。广告来了。。
要想发家致富吗，要想一夜脱贫吗，要想开着加长林肯泡妞吗。。呸。。。想都别想。。编程还得一步一步来。。。京东架构师胡峰的专栏，反正我是打算看了






专栏内容：

如何才能持续成长，是每一个程序员都绕不开的话题。

你有没有发现，身边总有人成长的特别快，他们的学习与吸收能力特别强？

当你正困惑于技能方向的选择时，他已经掌握了高效的进阶方法；当你还在苦恼于 Bug 的调试与修复时，他已经在独当一面，处理更为复杂的项目了；当你还在思考自己的技术人生，寻求突破和上升，他已经成为骨干，拿高薪带小团队了。

问题的关键是：他是怎么做到的？

你要承认，永远有走在你前面的人。但是成功的技术专家不一定都是学霸和工作狂， 开挂的事业与精彩生活并不存在冲突，每一次的痛苦与迷茫背后都是盲目的选择。任何一个所谓的“成功经验”都不是固定的，注重方法要比生搬硬套靠谱的多。

那么技术人应该如何制定切实可行的个人成长计划呢？

一个人事业上能获得更大的发展，一部分是由于他的专业技术，另外一大部分需要依赖他的软性技能。程序员进阶攻略，给予正在成长阶段的你很多启发与指引，帮助你在发展不顺利的时候不会无能为力，面对打击不仅仅停留在自我贬低，面对阶段性的成长，知道下一步应该如何做出最优选择。

胡峰，目前在京东成都研究院承担咚咚产品线技术架构工作，专注于 Java 后端分布式系统技术架构相关领域。从毕业到现在，在程序这条道路上已经走了十多年。毕业后先后进入金融、电信行业写程序，七年前加入京东。

综合他的成长轨迹，总体来看，能分出几个明显的阶段：启程之处、快速发展、道中彷徨、路在何方、破茧成蝶。这期间见证了互联网电商行业的高速发展，也一路从普通的开发者成长为了架构师。




左侧为成长阶段与职业角色  ，右侧为成长线

如果把专业技能称为硬实力的话，逻辑思维与解决问题的能力、书面沟通能力、领导力统统归为不可或缺的软实力范畴。在越来越多的技术知识课程涌现的今天，很少人意识到思维养成对于技术精进的重要性。

从七年前开始，我断断续续通过写作，记录了我个人发展过程中的所见、所感、所惑与所思，这些积累和思考，给我重塑自己的职业发展打下了坚实的基础。

这一路上我也有过迷茫，有过困惑，相信在我专栏里，你或多或少会看到不同时期自己的影子，你会看到我是如何从昨天走到今天，并指导自己走向更好的明天。我更希望每个程序员都能够在这条道路上充分挖掘自己的潜能，避免重蹈覆辙，实现快速的成长。

专栏共62期，分为六大模块：

征途：启程之初。入行之初，需要具备哪些最基础的技能？会面临怎样的困惑？最初的感受如何？找到走上程序之路的初心，成就更好的自己。
修炼：程序之术。程序之路前期，多会是以编程（炼术）为主：程序系统的架构与设计，功能模块的开发与编码，缺陷 Bug 的调试与修复。
修行：由术入道。除了编程写代码之外，还有一些其他维度的修行道路：计划的体系，精进的思维，习惯的养成，展现的形式，上升的阶梯，工程的方法。
徘徊：道中彷徨。行道中途，会面临成长平台期的困惑，该如何选择？
寻路：路在何方。前路多分岔，关于方向、角色、自省与定位，该如何决断？
蜕变：破茧成蝶。成长之路不连续，有阻挡你蜕变的边界与断层，该如何跨越？

也许你正处于下面的某个阶段：

入行之初，困惑于技能选择的方向和掌握的方法？
编程前期，苦恼于只能写出Bug不断的挖坑代码？
快速成长期，纠结于无法建立出自己的精进体系？
进阶瓶颈期，迫切于做出改变、寻求突破和上升？
面对成长断层，迷茫于停滞不前、无法跃迁成长？
不管你处于何种阶段，也不管你是学生、初级开发人员、技术主管，或者是架构师，甚至是对程序相关领域感兴趣的人士，都可以利用专栏中所提及的框架体系和思维方法去践行，一定会有所得、有所获。

