




https://www.cnblogs.com/williamjie/p/9546210.html
1. 简历看人

2. 给面试者10分钟介绍自己最擅长的
这个人对他所做的事情是否充满激情
他们是否能在团队中很有效地进行沟通
他们是否在专业领域足够擅长
你的团队是否会乐于和这个人一起工作

3. 基础打牢了吗？
HashTable与HashMap有什么区别？
Servlet是线程安全的吗？
JSP中@include跟jsp:include的区别
HTTP的response code 403和500分别代表什么

4. 技术深度够吗?
请你描述一下，在这个项目中，从一个HTTP请求发起，到最终的Response返回，它在你的系统和框架内部是如何流转的？
这个问题往往能够判断出面试者对于相关技术掌握的深度。较初级的开发人员描述的层级往往比较浅，比如使用Spring MVC框架的，只能说到实现一个Controller继承BaseCommandController（甚至很多开发人员只知道继承了一个公司内部框架的基类），至于再往下Spring框架是如何进行内部流转的，就再也说不清楚了。而更资深的开发人员，往往能说出框架内部的实现机制，以及如何调用和处理的。在面试者描述的过程中，你还可以穿插询问一些比较有深度的问题，比如框架中某个类这样设计是哪一种设计模式的体现，采用这样的设计有什么好处等等。这比让面试者默写一个设计模式代码要有效、自然得多。
　　除了技术层面上的考察之外，对于资深开发人员，还需要考察他们的设计能力。说到软件设计，大部分面试者都能熟练地背出面向对象的三个基本特性：继承、封装、多态，也能把它们的概念描述清楚。但我一般会问下面的这个问题来考察他们的面向对象设计能力。
请用一段程序代码描述我们所在的这间房间。
　　我惊讶地发现至少有一半的面试者都很难准确使用Interface和Class来给房间建模，也有一些人会将最基本的代码语法或关键字写错

5. 选择适合所在企业文化的人
我们很严肃地看待我们自己关于招聘流程的哲学。我们希望每一个GitHub员工都了解他们所要面对的环境，并保证他们是能够很好适应的。这包括我们所创造的文化、哲学、计划、错误甚至是晚餐。比起他们的技能是否满足要求，我们更看重他们的潜力以及是否能够适应我们的企业文化。

6. 行为面试法
请谈谈你在这个项目中遇到的最大困难或挑战是什么，你是如何解决的。

7. 给他们一个虚拟任务
写一个小程序将一个以特定格式（如CSV）存储的文本文件转换为XML格式，并存储为另一个文件。



你的简历中应该有什么？
1. 你的资源
2. 你的业绩
3. 你的能力
4. 你的过去

写简历应该注意什么？
你的资源
什么是资源？什么是影响力？
· 开源项目相关、各种标准委员会、各种程序员社区
· 呆过的优秀团队
· 其他network

你的业绩
什么是业绩？
· 必须是你的！
· 有前因后果，有可量化标准（功劳而不是苦劳）

你的能力
什么是能力？什么是技术？
· 工具不是技术！
· 能力是相对的（你哪里比别人强）
· 如何表述：我会干什么事儿，解决什么问题
· bad：会使用WebTester做前端优化
· good：擅长移动端前端优化，曾经将一个移动端app首页载入时间提升50%

你的过去
· 职业经历
· 项目经历

目的：写第四点是为了强调和印证你的前三点！
职业经历
· 简短一点！
· 把自己的位置说清楚（你有没有带领过小组，你项谁汇报）
· 不要写日常工作，而是写重要的事

项目经历
· 明面说项目，其实说自己
· 项目很重要，但是你有多重要？
· 技术
· 技术亮点
· 善于发现，梳理
· 技术沉淀
· 产出物：解决方案，工具，库，标准规范，文章……
· 技术思考
· 纯技术，个人化
· 与其他岗位的互动，思维打通
· 技术与业务结合

如何排版简历
不要太长！
1页最好，2页也行，3页太多
不要滥用颜色
1种颜色可以，2种颜色也行，3种太多
不要滥用可视化图表
简历中不需要出现可视化，也不需要出现图

慎重使用特殊排版的简历
· 特殊简历可以作为第二份简历备用
· 在线简历最好放在github或者码云上，保证url别失效
· 投出去的简历，建议pdf格式（不要html，也不要word）

简历中不要出现代码
· 简历的排版不适合放代码，简历里面的字体/缩进会导致代码没法读
· 代码太长，面试官不会看
· 代码放在github，简历放你的github帐号

不要造假
· 学历造假很危险，一票否决
· 职业经历造假小心背景调查，污点永存
· 项目吹牛小心面试官探底，吹的牛自己要能圆回来










