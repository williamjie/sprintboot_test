
1.过去工作经历回忆。
做过的项目介绍


2.业务开发（广、某一块深）和平台开发（深）


3.redis 使用集群：
twiter集群模式、codis集群、sentinal集群、redis3.0集群功能

4.介绍他们的工作

5.包括目前薪酬、

6.C++里面的虚函数 ; 虚表以及虚指针

7.STL map数据结构  hashmap 数据结构

8.libevent 边沿触发 水平触发（一直通知）

epoll 一颗红黑树，如何查找到时间 epoll能够高效支持百万级别的句柄监听

9.redis查找问题，10W/S的并发
redis出现问题很慢
aof （i/o慢） snap 快照 （内存不够）
句柄fd socket等 tcp调优
程序层面，是否没有释放socket
脏页等

redis的几种数据机构，redis原理

redis单线程多线程

10.语言模型C++  java  golang

11.redis mongdb

12.一致性hash算法，hash碰撞

redis内存淘汰机制
　　volatile-lru：  从已设置过期时间的数据集（server.db[i].expires）中挑选最近最少使用的数据淘汰（默认值）
　　volatile-ttl：      从已设置过期时间的数据集（server.db[i].expires）中挑选将要过期的数据淘汰
　　volatile-random：   从已设置过期时间的数据集（server.db[i].expires）中任意选择数据淘汰
　　allkeys-lru：       从数据集（server.db[i].dict）中挑选最近最少使用的数据淘汰
　　allkeys-random：    从数据集（server.db[i].dict）中任意选择数据淘汰
　　no-enviction：      禁止驱逐数据


惰性删除：
    -  到期后，不会自动删除，只会在每次读取键时进行检查，检查该键是否已经过期，如果过期，则进行删除动作。这样可以保证删除操作只会在非做不可的情况下进行
定期删除：
    - 每隔一段时间执行一次删除操作，并通过限制删除操作执行的时长和频率，籍此来减少删除操作对 CPU 时间的影响。

redis使用的是惰性删除 + 定期删除的策略




























































































